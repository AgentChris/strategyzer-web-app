{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","generateURL","savedURL","URL","window","location","keys","state","forEach","key","searchParams","append","setState","changeData","event","defineProperty","target","value","URLSearchParams","search","set","newRelativePathQuery","pathname","toString","history","pushState","handleFocus","select","designed_for","designed_by","date","today","Date","dd","getDate","mm","getMonth","getFullYear","getTodayString","version","key_partners","key_activities","key_resources","customer_relationship","customer_segments","channels","value_proposition","cost_structure","revenue_stream","_this2","new_state","decodeURIComponent","replace","RegExp","encodeURIComponent","getQueryStringValue","objectSpread","_this3","_this$state","react_default","a","createElement","className","type","onChange","react_contenteditable_default","html","onClick","onFocus","href","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a9fd596.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ContentEditable from 'react-contenteditable'\nimport './App.scss';\n\nfunction getQueryStringValue(key) {\n  return decodeURIComponent(window.location.search.replace(new RegExp(\"^(?:.*[&\\\\?]\" + encodeURIComponent(key).replace(/[\\.\\+\\*]/g, \"\\\\$&\") + \"(?:\\\\=([^&]*))?)?.*$\", \"i\"), \"$1\"));\n}\n\nfunction getTodayString(){\n  // return Example dd/mm/yyyy\n  let today = new Date();\n  let dd = today.getDate();\n  let mm = today.getMonth() + 1; //January is 0!\n\n  let yyyy = today.getFullYear();\n  if (dd < 10) {\n    dd = '0' + dd;\n  }\n  if (mm < 10) {\n    mm = '0' + mm;\n  }\n  return dd + '/' + mm + '/' + yyyy;\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      designed_for: '',\n      designed_by: '',\n      date: getTodayString(),\n      version: '0.0.1',\n      key_partners: '',\n      key_activities: '',\n      key_resources: '',\n      customer_relationship: '',\n      customer_segments: '',\n      channels: '',\n      value_proposition: '',\n      cost_structure: '',\n      revenue_stream: '',\n      savedURL: ''\n    }\n  }\n\n  componentDidMount() {\n    const new_state = {};\n    Object.keys(this.state).forEach((key) => {\n      new_state[key] = getQueryStringValue(key) || this.state[key];\n    });\n    this.setState({ ...new_state });\n  }\n\n\n  generateURL = () => {\n    let savedURL = new URL(window.location);\n\n    Object.keys(this.state).forEach((key) => {\n      savedURL.searchParams.append(key, this.state[key]);\n    });\n\n    this.setState({ savedURL });\n  };\n\n  changeData = (key, event) => {\n    this.setState({ [key]: event.target.value });\n\n    // update query params\n    let searchParams = new URLSearchParams(window.location.search);\n\n    Object.keys(this.state).forEach((key) => {\n      searchParams.set(key, this.state[key]);\n    });\n\n    var newRelativePathQuery = window.location.pathname + '?' + searchParams.toString();\n    window.history.pushState(null, '', newRelativePathQuery);\n  };\n\n  handleFocus = (event) => {\n    event.target.select();\n  };\n\n  render() {\n    const {\n      designed_for, key_partners, version,\n      key_activities, designed_by, date,\n      key_resources, savedURL,\n      customer_relationship,\n      customer_segments,\n      channels,\n      value_proposition,\n      cost_structure,\n      revenue_stream\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <section className=\"header\">\n          <h1 className=\"title\">The Business Model Canvas</h1>\n          <div className=\"header-container\">\n            <span className=\"header-input design-input\">\n            <label className=\"label\">Designed for:</label>\n            <input value={designed_for} type=\"text\" onChange={(event) => {\n              this.changeData(\"designed_for\", event);\n            }} />\n          </span>\n            <span className=\"header-input design-input\">\n            <label className=\"label\">Designed by:</label>\n            <input value={designed_by} type=\"text\" onChange={(event) => {\n              this.changeData(\"designed_by\", event);\n            }} />\n          </span>\n            <span className=\"header-input date\">\n            <label className=\"label\">Date:</label>\n            <input value={date} type=\"text\" onChange={(event) => {\n              this.changeData(\"date\", event);\n            }} />\n          </span>\n            <span className=\"header-input version\">\n            <label className=\"label\">Version:</label>\n            <input value={version} type=\"text\" onChange={(event) => {\n              this.changeData(\"version\", event);\n            }} />\n          </span>\n          </div>\n        </section>\n        <section className=\"container\">\n          <div className=\"canvas-item key-partners\">\n            <span>Key Partners</span>\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"key_partners\", event);\n            }} html={key_partners} />\n          </div>\n          <section className=\"canvas-item key-activities\">\n            <span>Key Activities</span>\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"key_activities\", event);\n            }} html={key_activities} />\n          </section>\n          <section className=\"canvas-item key-resources\">\n            <span>Key Resources</span>\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"key_resources\", event);\n            }} html={key_resources} />\n          </section>\n          <div className=\"canvas-item customer-relationship\">\n            <span>Customer Relationship</span>\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"customer_relationship\", event);\n            }} html={customer_relationship} />\n          </div>\n          <div className=\"canvas-item customer-segments\">\n            <span>Customer Segments</span>\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"customer_segments\", event);\n            }} html={customer_segments} />\n          </div>\n          <div className=\"canvas-item channels\">\n            <span>Channels</span>\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"channels\", event);\n            }} html={channels} />\n          </div>\n          <div className=\"canvas-item value-proposition\">\n            <span>Value Proposition</span>\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"value_proposition\", event);\n            }} html={value_proposition} />\n          </div>\n          <div className=\"canvas-item cost-structure\">\n            <span>Cost Structure</span>\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"cost_structure\", event);\n            }} html={cost_structure} />\n          </div>\n          <div className=\"canvas-item revenue-streams\">\n            <span>Revenue Streams</span>\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"revenue_stream\", event);\n            }} html={revenue_stream} />\n          </div>\n        </section>\n        <section className=\"save-section\">\n          <button onClick={this.generateURL} className=\"btn-save\">Save</button>\n          {savedURL ?\n            [<label>Share URL:</label>,\n              <input type=\"text\" className=\"save-url-input\" value={savedURL} onFocus={this.handleFocus} />] : null\n          }\n          <div className=\"contact-link-container\">\n            You can contact me <a href=\"https://www.linkedin.com/in/christian-poputea-0a3b49122\"\n                                  className=\"contact-link\">here</a>.\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}