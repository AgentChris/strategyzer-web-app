{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["encodeQueryString","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","CANVAS_ITEM_DATA","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","generateURL","savedURL","URL","window","location","state","search","localStorage","setItem","version","setState","changeData","key","event","defineProperty","target","value","newRelativePathQuery","pathname","history","pushState","ReactGA","category","action","handleFocus","select","designed_for","designed_by","date","today","Date","dd","getDate","mm","getMonth","getFullYear","getTodayString","key_partners","key_activities","key_resources","customer_relationship","customer_segments","channels","value_proposition","cost_structure","revenue_stream","_this2","new_state","keys","forEach","decodeURIComponent","replace","RegExp","getQueryStringValue","objectSpread","initialize","pageview","_this3","_this$state","react_default","a","createElement","className","dist_default","place","type","effect","multiline","onChange","data-tip","react_contenteditable_default","html","onClick","onFocus","href","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb500874.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport ContentEditable from 'react-contenteditable'\nimport ReactTooltip from 'react-tooltip'\nimport './App.scss';\n\nfunction getQueryStringValue(key) {\n  return decodeURIComponent(window.location.search.replace(new RegExp(\"^(?:.*[&\\\\?]\" + encodeURIComponent(key).replace(/[\\.\\+\\*]/g, \"\\\\$&\") + \"(?:\\\\=([^&]*))?)?.*$\", \"i\"), \"$1\"));\n}\n\nfunction encodeQueryString(obj) {\n  var str = [];\n  for (var p in obj)\n    if (obj.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n    }\n  return str.join(\"&\");\n}\n\n// https://www.alexandercowan.com/business-model-canvas-templates/\n\nconst CANVAS_ITEM_DATA = {\n  key_partners: 'What can the company not do so it can focus on its Key Activities? <br/> For example: Lemonade Stand we would have: Municipalities',\n  key_activities: 'What uniquely strategic things does the business do to deliver its proposition? <br/> For example: Lemonade Stand we would have: Making lemonade, Marketing, Selling',\n  key_resources: 'What unique strategic assets must the business have to compete? <br/> For example: Lemonade Stand we would have: Ingredients, Sales people, Both & equipment',\n  customer_relationship: 'How do you interact with the customer through their ‘journey’? <br/> For example: Lemonade Stand we would have: Personal',\n  customer_segments: 'Who are the customers? What do they think? See? Feel? Do? <br/> For example: Lemonade Stand we would have: Park visitors',\n  channels: 'How are these propositions promoted, sold and delivered? Why? Is it working? <br/>  For example: Lemonade Stand we would have: Booth sale WWW.Kellyslemonade.com',\n  value_proposition: 'What’s compelling about the proposition? Why do customers buy, use? <br/>  For example: Lemonade Stand we would have: Cold tasty natural lemonade on-the-go',\n  cost_structure: 'What are the business’ major cost drivers? How are they linked to revenue? <br/>  For example: Lemonade Stand we would have: Ingredients, Salaries/commission, Equipment, Flayers',\n  revenue_stream: 'How does the business earn revenue from the value propositions? <br/> For example: Lemonade Stand we would have: Lemonade sales, Tips',\n};\n\nfunction getTodayString() {\n  // return Example dd/mm/yyyy\n  let today = new Date();\n  let dd = today.getDate();\n  let mm = today.getMonth() + 1; //January is 0!\n\n  let yyyy = today.getFullYear();\n  if (dd < 10) {\n    dd = '0' + dd;\n  }\n  if (mm < 10) {\n    mm = '0' + mm;\n  }\n  return dd + '/' + mm + '/' + yyyy;\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      designed_for: '',\n      designed_by: '',\n      date: getTodayString(),\n      version: '0.0.1',\n      key_partners: '',\n      key_activities: '',\n      key_resources: '',\n      customer_relationship: '',\n      customer_segments: '',\n      channels: '',\n      value_proposition: '',\n      cost_structure: '',\n      revenue_stream: '',\n      savedURL: ''\n    }\n  }\n\n  componentDidMount() {\n    const new_state = {};\n\n    Object.keys(this.state).forEach((key) => {\n      new_state[key] = getQueryStringValue(key) || this.state[key];\n    });\n\n    delete new_state['savedURL'];\n    this.setState({ ...new_state });\n\n    ReactGA.initialize('UA-120608794-3');\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }\n\n\n  generateURL = () => {\n    let savedURL = new URL(window.location);\n\n    delete this.state['savedURL'];\n    savedURL.search = encodeQueryString(this.state);\n    localStorage.setItem(\"history_\" + this.state.version, savedURL);\n\n    this.setState({ savedURL });\n  };\n\n  changeData = (key, event) => {\n    this.setState({ [key]: event.target.value }, () => {\n      // update query params\n      const newRelativePathQuery = window.location.pathname + '?' + encodeQueryString(this.state);\n      window.history.pushState(null, '', newRelativePathQuery);\n    });\n    ReactGA.event({\n      category: 'saveURL',\n      action: 'save url'\n    });\n  };\n\n  handleFocus = (event) => {\n    event.target.select();\n  };\n\n  render() {\n    const {\n      designed_for, key_partners, version,\n      key_activities, designed_by, date,\n      key_resources, savedURL,\n      customer_relationship,\n      customer_segments,\n      channels,\n      value_proposition,\n      cost_structure,\n      revenue_stream\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" multiline />\n        <section className=\"header\">\n          <h1 className=\"title\">The Business Model Canvas</h1>\n          <div className=\"header-container\">\n            <span className=\"header-input design-input\">\n            <label className=\"label\">Designed for:</label>\n            <input value={designed_for} type=\"text\" onChange={(event) => {\n              this.changeData(\"designed_for\", event);\n            }} />\n          </span>\n            <span className=\"header-input design-input\">\n            <label className=\"label\">Designed by:</label>\n            <input value={designed_by} type=\"text\" onChange={(event) => {\n              this.changeData(\"designed_by\", event);\n            }} />\n          </span>\n            <span className=\"header-input date\">\n            <label className=\"label\">Date:</label>\n            <input value={date} type=\"text\" onChange={(event) => {\n              this.changeData(\"date\", event);\n            }} />\n          </span>\n            <span className=\"header-input version\">\n            <label className=\"label\">Version:</label>\n            <input value={version} type=\"text\" onChange={(event) => {\n              this.changeData(\"version\", event);\n            }} />\n          </span>\n          </div>\n        </section>\n        <section className=\"container\">\n          <div className=\"canvas-item key-partners\">\n            <span>Key Partners</span>\n            <i className=\"fas fa-link\" data-tip={CANVAS_ITEM_DATA.key_partners} />\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"key_partners\", event);\n            }} html={key_partners} />\n          </div>\n          <section className=\"canvas-item key-activities\">\n            <span>Key Activities</span>\n            <i className=\"fas fa-check-circle\" data-tip={CANVAS_ITEM_DATA.key_activities} />\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"key_activities\", event);\n            }} html={key_activities} />\n          </section>\n          <section className=\"canvas-item key-resources\">\n            <span>Key Resources</span>\n            <i className=\"fas fa-industry\" data-tip={CANVAS_ITEM_DATA.key_resources} />\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"key_resources\", event);\n            }} html={key_resources} />\n          </section>\n          <div className=\"canvas-item customer-relationship\">\n            <span>Customer Relationship</span>\n            <i className=\"fas fa-heart\" data-tip={CANVAS_ITEM_DATA.customer_relationship} />\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"customer_relationship\", event);\n            }} html={customer_relationship} />\n          </div>\n          <div className=\"canvas-item customer-segments\">\n            <span>Customer Segments</span>\n            <i className=\"fas fa-users\" data-tip={CANVAS_ITEM_DATA.customer_segments} />\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"customer_segments\", event);\n            }} html={customer_segments} />\n          </div>\n          <div className=\"canvas-item channels\">\n            <span>Channels</span>\n            <i className=\"fas fa-shuttle-van\" data-tip={CANVAS_ITEM_DATA.channels} />\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"channels\", event);\n            }} html={channels} />\n          </div>\n          <div className=\"canvas-item value-proposition\">\n            <span>Value Proposition</span>\n            <i className=\"fas fa-gift\" data-tip={CANVAS_ITEM_DATA.value_proposition} />\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"value_proposition\", event);\n            }} html={value_proposition} />\n          </div>\n          <div className=\"canvas-item cost-structure\">\n            <span>Cost Structure</span>\n            <i className=\"fas fa-tags\" data-tip={CANVAS_ITEM_DATA.cost_structure} />\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"cost_structure\", event);\n            }} html={cost_structure} />\n          </div>\n          <div className=\"canvas-item revenue-streams\">\n            <span>Revenue Streams</span>\n            <i className=\"fas fa-money-bill-wave\" data-tip={CANVAS_ITEM_DATA.revenue_stream} />\n            <ContentEditable className=\"content-info\" onChange={(event) => {\n              this.changeData(\"revenue_stream\", event);\n            }} html={revenue_stream} />\n          </div>\n        </section>\n        <section className=\"save-section\">\n          <button onClick={this.generateURL} className=\"btn-save\">Save</button>\n          {savedURL ?\n            [<label>Share URL:</label>,\n              <input type=\"text\" className=\"save-url-input\" value={savedURL} onFocus={this.handleFocus} />] : null\n          }\n          <div className=\"contact-link-container\">\n            You can contact me <a href=\"https://www.linkedin.com/in/christian-poputea-0a3b49122\"\n                                  className=\"contact-link\" target=\"_blank\">here</a>.\n            <span className=\"learn-more\">\n              Learn more about this&nbsp;\n              <a className=\"contact-link\" target=\"_blank\"\n                 href=\"https://strategyzer.com/canvas/business-model-canvas\">here</a>.\n            </span>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}